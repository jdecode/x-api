{
    "name": "founderandlightning/xdev",
    "type": "boilerplate",
    "description": "Laravel Boilerplate | LBP",
    "keywords": ["FounderAndLightning", "boilerplate", "laravel"],
    "license": "MIT",
    "require": {
        "php": "^8.1",
        "ext-curl": "*",
        "ext-json": "*",
        "ext-pdo": "*",
        "doctrine/dbal": "^3.4",
        "guzzlehttp/guzzle": "^7.2",
        "laravel/breeze": "^1.12",
        "laravel/framework": "^9.19",
        "laravel/sanctum": "^3.0",
        "laravel/telescope": "^4.9",
        "laravel/tinker": "^2.7"
    },
    "require-dev": {
        "barryvdh/laravel-ide-helper": "^2.12",
        "brainmaestro/composer-git-hooks": "dev-master",
        "enlightn/security-checker": "^1.10",
        "fakerphp/faker": "^1.9.1",
        "laravel/pint": "^1.0",
        "laravel/sail": "^1.0.1",
        "mockery/mockery": "^1.4.4",
        "nunomaduro/collision": "^6.1",
        "pestphp/pest": "^1.22",
        "pestphp/pest-plugin-laravel": "^1.2",
        "pestphp/pest-plugin-parallel": "^1.2",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpmd/phpmd": "^2.12",
        "phpunit/phpunit": "^9.5.10",
        "spatie/laravel-ignition": "^1.0",
        "squizlabs/php_codesniffer": "^3.7"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "cghooks": "[ -f vendor/bin/cghooks ] && vendor/bin/cghooks update || echo 'cghooks not found'",
        "ide-helper": [
            "@php artisan ide-helper:generate -n",
            "@php artisan ide-helper:meta -n",
            "@php artisan ide-helper:models -n"
        ],
        "parallel-lint": "vendor/bin/parallel-lint --exclude vendor . --colors",
        "phpcs": "vendor/bin/phpcs app --standard=PSR12 --colors -p",
        "phpmd": "vendor/bin/phpmd . text phpmd_ruleset.xml --exclude vendor,_ide_helper.php,database,app/Console/Kernel.php,tests",
        "security-checker": "vendor/bin/security-checker security:check",
        "phpcbf": "vendor/bin/phpcbf app --standard=PSR12",
        "phpunit": "vendor/bin/phpunit --color=always",
        "pest": "vendor/bin/pest --stop-on-failure --parallel",
        "routes": "@php artisan route:list --except-vendor",
        "chmoder" : "chmod -R 777 storage bootstrap /usr/lib/node_modules /usr/bin && chown -R 1001:1001 /usr/lib/node_modules /usr/bin/",
        "clear": [
            "@php artisan config:clear",
            "@php artisan route:clear",
            "@php artisan view:clear",
            "@php artisan clear-compiled",
            "@chmoder"
        ],
        "cache-clear": [
            "@php artisan cache:clear"
        ],
        "dev-setup": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "@putenv CACHE_DRIVER=file",
            "@php artisan key:generate",
            "@php artisan migrate --seed",
            "@cghooks",
            "@ide-helper",
            "@ci"
        ],
        "ci": [
            "@chmoder",
            "npm install",
            "npm run build",
            "@tests"
        ],
        "pre-commit": [
            "@composer run parallel-lint",
            "@composer run phpcs",
            "@composer run phpmd",
            "@composer run security-checker"
        ],
        "pre-push": [
            "@composer run pest"
        ],
        "tests": [
            "@pre-commit",
            "@pre-push"
        ],
        "post-merge": [
            "@php artisan migrate",
            "composer install",
            "echo \"\nSeed, if in need: \\e[32mphp artisan db:seed\\e[0m\"\n"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        },
        "hooks": {
            "config": {
                "stop-on-failure": [
                    "pre-commit",
                    "pre-push"
                ]
            },
            "pre-commit": [
                "docker-compose exec -T xdev-api composer run pre-commit"
            ],
            "pre-push": [
                "docker-compose exec -T xdev-api composer run pre-push"
            ],
            "post-merge": [
                "docker-compose exec -T xdev-api composer run post-merge"
            ]
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
