version : "3"
services:
  xdev-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: xdev-api
    depends_on:
      - xdev-pg
    volumes:
      - .:/var/www/html
    restart: always
    ports:
      - "1001:80"
      - "1010:1010"
    environment:
      APP_NAME: 'Laravel Boilerplate for 10x developers'
      APP_DEBUG: 'true'
      APP_URL: 'http://100.10.1.1'
      DB_CONNECTION: 'pgsql'
      QUEUE_CONNECTION: 'database'
      XDEBUG_CONFIG: "mode=debug,coverage,develop client_host=host.docker.internal discover_client_host=1 start_with_request=yes"
      GITHUB_USERNAME: 'jdecode'
      GITHUB_REPONAME: 'xdev'
    networks:
      xdev-api-network:
        ipv4_address: 100.10.1.1
    extra_hosts:
      - host.docker.internal:host-gateway

  xdev-pg:
    image: postgres:latest
    ports:
        - "1100:5432"
    environment:
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: test_db
    container_name: xdev-pg
    volumes:
      - xdev-pg-disk:/var/lib/postgres
    networks:
      xdev-api-network:
        ipv4_address: 100.10.1.2

  xdev-tf:
      build:
        context: .
        dockerfile: terraform/Dockerfile
      container_name: xdev-tf
      volumes:
          - .:/var/www/html
      environment:
        HEROKU_API_KEY: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
        AWS_ACCESS_KEY_ID: 'xxxxxxxxxxxxxxxxxxxx'
        AWS_SECRET_ACCESS_KEY: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
        POSTMAN_API_KEY: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
        CIRCLECI_API_KEY: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

      networks:
        xdev-api-network:
          ipv4_address: 100.10.1.3

# On-disk storage of DB data, when containers are stopped
volumes:
  xdev-pg-disk: {}

# Local network for services running using this docker-compose config
networks:
  xdev-api-network:
    ipam:
      driver: default
      config:
        - subnet: 100.10.0.0/16
